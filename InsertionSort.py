import os
import glob
import pandas as pd
import math
import numpy as np
import datetime
from Bio import SeqIO
import argparse


if __name__ == "__main__":

    MyString="63559 90220 87724 -52673 40421 32414 -89725 -92187 -85607 -96295 -56076 -39599 72683 -63778 -88859 5050 -20109 -26225 10421 28161 2807 53682 50554 -68650 -58004 -23014 -93957 97451 -16640 -76069 -36427 -25055 71062 -46635 19978 23826 -93637 34544 37160 -54205 45784 -20837 80355 -74885 58359 21538 61012 16353 -21764 -10062 30807 -8342 -67742 -40202 24373 96326 -5920 59981 -97762 -13515 -2819 -93781 -27878 -98911 36529 58448 -44471 -4425 -72242 -23575 98793 -13064 92370 93930 -27089 84307 -29212 34917 73125 39432 68139 -91710 -88052 91543 1530 78879 -59381 27774 -46412 70603 -88242 57094 -17650 26476 -41405 -40819 -74662 75195 -63801 25001 63031 74229 -34152 61439 -91362 -98229 -98585 3651 -94147 -46282 24650 -27271 -70052 -79836 -53168 67768 -86128 -1393 3483 -41844 -2097 86287 -45434 -4783 55288 -78076 36946 93715 84288 84597 62892 -16418 98969 -63390 -51004 77356 64143 44450 59378 27219 37926 -36619 -53879 -95786 82425 -46797 16459 74910 16538 -60314 -46895 -88854 14207 33747 -53711 39462 90226 59040 -6936 -11884 99814 63129 -35835 -90553 -64289 -31527 -89852 38299 92250 -28930 -26742 91882 71887 -2568 -46870 -32989 -93413 -8923 48669 -57845 69275 -45014 2003 82876 -44644 7085 -61960 6066 35557 76851 -24844 47762 86504 85499 72465 -77745 43364 70337 -32873 -43863 51824 -87145 -77836 84935 -54545 43969 -62789 64629 -97937 2412 -60021 -93507 -98662 -73544 -71424 -72251 6085 56175 -91394 38870 86034 92089 -85910 -1057 -70803 5790 -21272 -33979 32598 18003 -18372 23969 -31236 9678 -39508 81437 -65126 86628 11083 -52156 15223 -84227 -18499 -23498 74634 76167 1440 28935 33495 -10342 -24345 -66404 80161 25327 -44117 -61065 -20677 40191 10068 -22537 70256 58722 88238 39169 -57036 -71125 24939 72006 28039 91462 9519 51666 71267 -13822 71200 33957 -63504 -69007 9400 82370 56816 61063 -32542 86123 82690 -14886 76986 3718 66897 -73159 80469 -70712 -91890 -43617 -86293 -17863 87104 -26969 67545 99536 -20097 -38023 -29556 -18337 82212 90263 71795 13895 -74744 -55528 1269 -90654 -41691 59555 14035 69120 16969 45092 -54172 -46263 -12705 -86826 -71144 -25351 -87739 58111 -45888 44148 60206 -83910 26745 -15779 -38439 94621 61547 97086 -7803 -4276 -3471 -49457 -99468 -86212 -31650 -54665 41032 -88430 -45104 49136 -8024 32230 44203 83357 -25374 21208 -54865 53111 -64940 82184 -71039 -67626 -84374 -26160 -55816 -3954 35576 40487 -90041 47275 75385 85327 -87776 -27885 -19034 -48715 66631 7046 6222 73706 -51180 80506 -82487 28907 -58424 -83043 49745 -58565 29403 -75594 66027 7450 73589 -927 26210 -28597 -81218 93134 -41806 -41720 84572 -88363 64834 45570 81285 -75002 18821 64052 81194 -89944 19651 30458 -68552 62358 -8612 20649 -80213 -55774 -31440 -32346 64724 21332 -21967 81623 57826 93261 -88061 45796 84680 -38268 22933 -75402 15920 22915 -29617 -38631 -52639 21207 98972 32435 -8086 -42534 -96092 59654 17446 -59348 -70581 -32145 -92665 -78971 16466 -46581 34785 -99079 6952 -84615 56397 88540 -4632 -40674 -63711 1839 18948 -93464 -24128 -36142 -35320 -34003 -58478 -37307 23064 -3064 66632 94963 -62161 -94991 -29445 64376 61335 56863 -24034 38131 -38674 61191 -56283 49403 25136 -46180 -26014 78363 95433 86687 56509 30639 -17632 -35712 82778 89466 20115 8171 -65084 -12090 99421 10411 -21230 44567 -74796 -3820 -75386 54211 -12120 26669 14651 -23460 75475 -30671 -11657 46886 98620 -56201 60141 -31154 -22128 1923 87123 82911 -89556 -71817 15422 1083 -91592 99160 -45485 -21479 -23598 18664 -23622 -46905 70207 -60982 79632 -99504 -70104 48467 420 -35060 -90917 20998 16358 -41455 12491 36389 -12421 64274 6265 -94650 -39456 -38246 -75088 -84917 -57600 54820 -44889 97643 -43593 65362 -21743 1539 -46769 -74130 -41792 7903 52453 46854 -56401 -43997 81675 -64902 -177 95046 -90285 -44092 15714 -47360 6396 85813 -81306 83468 -8560 -17923 17896 -5055 28442 -17281 -72756 -15731 -62034 57045 -51411 -26046 7993 -45961 -45220 8655 -1363 -8429 4547 -88077 -29341 -92605 90401 -19493 -95716 6357 -8673 29860 -2754 -36095 -71665 -47315 54827 -90961 -22000 65838 82115 3245 89128 -43903 44906 -38035 38944 -74030 -94221 34949 -1039 61632 36496 -99718 42970 1451 -93487 39457 -31462 74280 91848 85145 16104 98183 70304 -94340 -99747 -92266 -83075 -68848 -14576 39717 -14522 -41943 17414 90257 38777 26774 96465 -12669 65143 -4913 -97354 -60863 -18071 73514 -33689 57633 35215 -90723 -59621 -32115 58566 44993 95085 26050 94158 35632 -53115 39658 -21868 90232 -26703 -37079 58109 -37520 15271 -60956 -17402 -91177 41830 46486 -56833 22434 -99453 34230 84176 35922 -34293 11350 6942 -97669 -90318 -29057 97293 -86966 77999 -89764 -83014 -70366 56084 60639 -82873 -50098 -69251 -40649 -62144 43280 40101 4681 -37878 50210 -622 44823 48236 -42571 32869 -13542 -52901 70105 90263 83024 74006 -45310 -49 93038 -55329 8221 39615 -84026 -46321 -62681 30520 51404 62942 -47906 32426 46559 51594 74048 -63610 -47761 -7362 46069 -90940 -56963 -75343 -97744 -13445 46868 65465 -52207 -59613 -74254 -93310 55841 7162 27744 -10171 41662 30903 25061 48319 68196 -10765 82210 -15398 48400 -93260 -33034 24368 36801 62742 -34155 8262 42352 -47734 -40268 75174 30537 42638 60154 44888 -65107 70733 78160 -21178 47526 -89616 87600 84333 -98951 -32448 -19435 -44457 25054 45401 -47523 63291 -67657 20159 -1823 -49386 -28586 37004 29628 72492 3631 1386 -93314 6146 4138 80935 -12304 72388 82483 -12869 -73601 -49327 -159 -23641 72113 -45578 -48536 -35586 -34 97318 84935 75179 -98609 -95432 92072 -65815 18997 85097 -3248 56720 -99235 -90573 -58202 -76692 88955 30965 22298 12050 98524 22663 -98034 76276 -92315 81737 -58475 -48054 97590 45051 95617 99259 35575 -97481 -70492 -86993 87049 84361 57508 60637 -24858 6054 81960 -58768 -10370 -73962 -72344 34946 2827 71627 34110 1878 -72438 -27662 -77117 -68368 516 -49402 -97522 -43838 33186 -23783 -93754 69161 -44123 -19736 50986 30159 71040 -73847 -7511 32565 11740 36134 75418 -73640 -46471 6783 -26279 18062 28331 11025 70736 -77703 62697 -22702 85418 -42689 -28654 -475 -88482 -97129 63150 -70636 -728 -9169 54648 57709 50764 4635 -374 27361 -69195 -55760 81563 -21642 13982 -18075 -64854 80488 46297 89837 -20932 -38474 -28073 6432 -79860 71564 68309 -67095 18791 -54878 -77692 98393 32334 29318 47939 3891 -27588 82217 -2852 64902 47859 -87540 12518 41486 -30021 73189 -47593 -97939 -80176 76367 34800 -2248 -21750 -19924 87809 -91651 80995 -73953 -13784 71301 -96452 16819 -37924"
    
    myList=MyString.split(" ")
    myList=[int(x) for x in myList ]

    nbSwap=0
    for i in range(0,len(myList)):
        k=i
        
        while (k > 0):     
            if (myList[k] < myList[k-1]):
                tmpVar=myList[k]
                myList[k]=myList[k-1]
                myList[k-1]=tmpVar
                nbSwap+=1

            k=k-1
    
    #print(myList)
    print(nbSwap)

                
